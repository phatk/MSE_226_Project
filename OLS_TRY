library(cvTools)
library(tidyverse)
library(tibble)
library(GGally)
library(plotly)
library(ggplot2)
library(rlang)
library(mosaicData)
library(cvTools)
library(GGally)
library(caret)
options(scipen = 999, digits = 5)
library(stringr)

setwd("/Users/tylercoleman/Desktop/")

# Loading the data: 22 Observations for each play, from each player perspective
NFL_DATA <- read.csv(file = "train.csv", header = TRUE, sep=",")
View(NFL_DATA)

# We only want from the position of the running player as info about other players is captured in df
NFL_DATA_Run_Observations <- NFL_DATA[(NFL_DATA$NflIdRusher == NFL_DATA$NflId), ]
View(NFL_DATA_Run_Observations)

# Split the runs for runner into a train and test set

set.seed(123)
training_data = sample(nrow(NFL_DATA_Run_Observations), size = nrow(NFL_DATA_Run_Observations) * 0.8) # get 80% of training data for training
NFL_DATA_Train = NFL_DATA_Run_Observations[training_data, ] 
NFL_DATA_Holdout = NFL_DATA_Run_Observations[-training_data, ] # holdout is remaining indices
View(NFL_DATA_Train) 


# DATA EXPLORATION

# Explore distribution of the continuos response variable we are predicting. (Yards/carry)
ggplot(data = NFL_DATA_Train) + 
  geom_histogram(mapping = aes(x = Yards), bins = 100) + 
  ggtitle("Distribution of Yards")

# Zoom into specifically -10 to 20 yards
ggplot(data = NFL_DATA_Train) + 
  geom_histogram(mapping = aes(x = Yards), bins = 100) + 
  coord_cartesian(xlim=c(-10,20), ylim=c(0, 4000)) + 
  geom_vline(xintercept = 4) + 
  ggtitle("Distribution of Yards")

# 2, 3, 4, 5 yards in particular are the peaks

# What percentage of runs result in > 10 yards? 0.0956517
More_Than_10 = NFL_DATA_Train[(NFL_DATA_Train$Yards > 10), ]
Percentage_Over_10 =  nrow(More_Than_10) / nrow(NFL_DATA_Train) 
Percentage_Over_10

# What Percentage of runs is < 0 yards? 0.1101101
Less_Than_0 = NFL_DATA_Train[(NFL_DATA_Train$Yards < 0), ]
Percentage_under_0 =  nrow(Less_Than_0) / nrow(NFL_DATA_Train) 
Percentage_under_0

# See if there is difference in run yard by quarter

NFL_DATA_Train$Quarter = factor(NFL_DATA_Train$Quarter)

# First quarter
ggplot(data = NFL_DATA_Train[(NFL_DATA_Train$Quarter == 1), ]) + 
  geom_histogram(mapping = aes(x = Yards), bins = 100) + 
  ggtitle("Distribution of Yards in 1 Quarter")

# Second quarter
ggplot(data = NFL_DATA_Train[(NFL_DATA_Train$Quarter == 2), ]) + 
  geom_histogram(mapping = aes(x = Yards), bins = 100) + 
  ggtitle("Distribution of Yards in 2 Quarter")

# Third quarter
ggplot(data = NFL_DATA_Train[(NFL_DATA_Train$Quarter == 3), ]) + 
  geom_histogram(mapping = aes(x = Yards), bins = 100) + 
  ggtitle("Distribution of Yards in 3 Quarter")

# Fourth quarter
ggplot(data = NFL_DATA_Train[(NFL_DATA_Train$Quarter == 4), ]) + 
  geom_histogram(mapping = aes(x = Yards), bins = 100) + 
  ggtitle("Distribution of Yards in 4 Quarter")

# Plot 3d of X and Y position, and yards gotten
plot_ly(
  NFL_DATA_Train, x = ~X, y = ~Y, z = ~Yards, color = ~PossessionTeam) %>%
  add_markers() %>%
  layout(
    scene = list(xaxis = list(title = 'X'),
                 yaxis = list(title = 'Y'),
                 zaxis = list(title = 'Yards'))
  )

# Plot 3d of down and distance, and yards gotten
plot_ly(
  NFL_DATA_Train, x = ~Distance, y = ~Down, z = ~Yards, color = ~PossessionTeam) %>%
  add_markers() %>%
  layout(
    scene = list(xaxis = list(title = 'Distance'),
                 yaxis = list(title = 'Down'),
                 zaxis = list(title = 'Yards'))
)

NFL_DATA_Train$OffenseFormation = factor(NFL_DATA_Train$OffenseFormation)
NFL_DATA_Train$DefendersInTheBox = factor(NFL_DATA_Train$DefendersInTheBox)

# Plot 3d of offense formation and defenders in box, and yards gotten. More defenders, less yards
# Might be ok, might only need 2 yards, same for 4th down
plot_ly(
  NFL_DATA_Train, x = ~OffenseFormation, y = ~DefendersInTheBox, z = ~Yards, color = ~PossessionTeam) %>%
  add_markers() %>%
  layout(
    scene = list(xaxis = list(title = 'OffenseForm'),
                 yaxis = list(title = 'DefendInBox'),
                 zaxis = list(title = 'Yards'))
)

# DATA MANIPULATION AND CLEANING

# Adding the covariates that we want to include, and modififying the dataframe 

# Make Copy so I can add new covariates

NFL_DATA_TRAIN_Modified <- NFL_DATA_Train
# View(NFL_DATA_TRAIN_Modified)

# Function to take the difference in time from the dataframe
timeDifference <- function(time) {
  num <- gsub("[:]", "" , str_sub(time, 12, 19), perl=TRUE)
  hr <- ifelse(str_sub(num, 1, 2) == "00", 24, as.numeric(str_sub(num, 1, 2)))
  min <- as.numeric(str_sub(num, 3, 4))
  sec <- as.numeric(str_sub(num, 5, 6))
  newTime <- 3600*hr + 60 * min + sec
  return(newTime)
}

# Add Time_Difference between the snap and the handoff
NFL_DATA_TRAIN_Modified$TimeDifference <- 
  timeDifference(NFL_DATA_TRAIN_Modified$TimeHandoff) - timeDifference(NFL_DATA_TRAIN_Modified$TimeSnap)

# Add the Difference in Score by home score - visitor score
# Difference in Score (Pair with which team is winning (HomeScore-AwayScore))
NFL_DATA_TRAIN_Modified$HomeScoreAdvantage <- 
  NFL_DATA_TRAIN_Modified$HomeScoreBeforePlay - NFL_DATA_TRAIN_Modified$VisitorScoreBeforePlay


# Add the Team that is on defense (Yards allowed)

#if home team has the ball, then the visitor is playing defense.
#if home team does not have the ball, then the home team is playing defense. 
NFL_DATA_TRAIN_Modified$OnDefense <- 
  ifelse(
    as.character(NFL_DATA_TRAIN_Modified$HomeTeamAbbr) == as.character(NFL_DATA_TRAIN_Modified$PossessionTeam),
    as.character(NFL_DATA_TRAIN_Modified$VisitorTeamAbbr) , 
    as.character(NFL_DATA_TRAIN_Modified$HomeTeamAbbr) 
  )
NFL_DATA_TRAIN_Modified$OnDefense = factor(NFL_DATA_TRAIN_Modified$OnDefense)

# Add the age of the running player

# Change the birth dates to strings
NFL_DATA_TRAIN_Modified$PlayerBirthDate = as.character(NFL_DATA_TRAIN_Modified$PlayerBirthDate)
# Grab the Year for each of the running player
Birth_Year = str_sub(NFL_DATA_TRAIN_Modified$PlayerBirthDate, 7, 11)
# Grab Month of each running player
Birth_Month = str_sub(NFL_DATA_TRAIN_Modified$PlayerBirthDate, 1, 2)

# If Born in July (07) Have lived 5/12 of a year. ie (12 - (Birth_Month)) / 12
How_Much_Of_Year_Lived = (12 - as.numeric(Birth_Month)) / 12
Years_Lived = NFL_DATA_TRAIN_Modified$Season - as.numeric(Birth_Year)
Total_Years_Lived = Years_Lived + How_Much_Of_Year_Lived
NFL_DATA_TRAIN_Modified$PlayerAge = Total_Years_Lived



# MORE EXPLORATION WITH NEW COVARIATES

# Offense Formation, Defensive_Team, Yards, Defenders in Box Color

plot_ly(
  NFL_DATA_TRAIN_Modified, x = ~OffenseFormation, y = ~OnDefense, z = ~Yards, color = ~DefendersInTheBox) %>%
  add_markers() %>%
  layout(
    scene = list(xaxis = list(title = 'OffenseForm'),
                 yaxis = list(title = 'OnDefense'),
                 zaxis = list(title = 'Yards'))
  )

# Yards vs. Difference in Score, Color = Quarter
ggplot(NFL_DATA_TRAIN_Modified, aes(x=HomeScoreAdvantage, y=Yards, color = Quarter )) +
  geom_point(size=2, shape=23)
# Difference in score spreads out depending on the quarter (makes sense)
# Overtime looks to have highest average yards
# 4th quarter more run plays

# Time between handoff and yards, color = offense style 
ggplot(NFL_DATA_TRAIN_Modified, aes(x=TimeDifference, y=Yards, color = OffenseFormation)) +
  geom_point(size=2, shape=23)

# GameClock, Quarter, Yards
NFL_DATA_TRAIN_Modified$GameClock = factor(NFL_DATA_TRAIN_Modified$GameClock)
plot_ly(
  NFL_DATA_TRAIN_Modified, x = ~GameClock, y = ~Quarter, z = ~Yards, color = ~DefendersInTheBox) %>%
  add_markers() %>%
  layout(
    scene = list(xaxis = list(title = 'Game Clock'),
                 yaxis = list(title = 'Quarter'),
                 zaxis = list(title = 'Yards'))
  )

# SELECTION OF COVARIATES FOR ANALYSIS

# Data we want
# GameId, PlayId, Team, X, Y, NFLID, Quarter, GameClock, PossesionTeam
# Down, Distance, HomeScoreBeforePlay, VisitorScoreBeforePlay, NflIdRusher,
# OffenseFormation, OffensePersonel, DefendersinBox, DefensePersonel, 
# Play direction, Yards, PlayerHeight, PlayerWeight, PlayerBirthDate, HomeTeamAbbr
# AwayTeamAbbr, Week, StadiumType, Turf, GameWeather, Temperature, Humidity

# Drop columns that are not important to df
NFL_DATA_TRAIN_Complete_Modified = select(NFL_DATA_TRAIN_Modified, 
                                          -GameId, -PlayId, -Team, -S, -A, -Dis,
                                          -Orientation, -Dir, -DisplayName, -JerseyNumber,
                                          -YardLine, -FieldPosition, -HomeScoreBeforePlay,
                                          -VisitorScoreBeforePlay, -NflId, -TimeHandoff,
                                          -TimeSnap, -PlayerBirthDate, -PlayerCollegeName, -Location,
                                          -WindSpeed, -WindDirection)
View(NFL_DATA_TRAIN_Complete_Modified)


# BASELINE ANALYSIS

# Using all Covariates included the original NFL_Train, not using the 4 covariates we created
NFL_DATA_TRAIN_Old_Covariates = select(NFL_DATA_TRAIN_Complete_Modified,
                                                         -TimeDifference, -HomeScoreAdvantage,
                                                         -OnDefense, -PlayerAge) 
                                                          # Want to include offense peronsell

# NEED TO DO MORE DATA CLEANING




NFL_Train_Total_Model = lm(Yards ~ ., data=NFL_DATA_TRAIN_Old_Covariates)

RMSE_NFL = sqrt(mean((NFL_DATA_TRAIN_Old_Covariates$Yards - predict(NFL_Train_Total_Model, NFL_DATA_TRAIN_Old_Covariates)) ^ 2)) 

levels(NFL_DATA_TRAIN_Old_Covariates$DefensePersonnel)

# NFL_Train_Total_Model.cv = cvFit(NFL_Train_Total_Model, data=NFL_DATA_TRAIN_Old_Covariates,
                                 # y=NFL_DATA_TRAIN_Old_Covariates$Yards, K=10, seed=1)
# NFL_Train_Total_Model.cv


  
